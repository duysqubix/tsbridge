# Example configuration demonstrating header manipulation features

[tailscale]
# Authentication - use either OAuth or authkey
oauth_client_id_env = "TS_OAUTH_CLIENT_ID"
oauth_client_secret_env = "TS_OAUTH_CLIENT_SECRET"

# Global settings that apply to all services
[global]
whois_enabled = true  # Enable user identification
whois_timeout = "2s"
access_log = true     # Enable access logging
retry_count = 3
retry_delay = "1s"

# Service with upstream header manipulation
[[services]]
name = "api-gateway"
backend_addr = "localhost:8080"

# Headers to add to requests going to the backend
[services.upstream_headers]
"X-Service-Name" = "tsbridge"
"X-API-Version" = "v1"
"X-Request-Source" = "tailscale"

# Headers to remove from requests before sending to backend
remove_upstream = ["Cookie", "Authorization"]  # Remove sensitive headers

# Headers to add to responses going back to the client
[services.downstream_headers]
"X-Powered-By" = "tsbridge"
"X-Cache-Status" = "MISS"
"Strict-Transport-Security" = "max-age=31536000; includeSubDomains"

# Headers to remove from responses before sending to client
remove_downstream = ["Server", "X-Backend-Version"]  # Hide backend details

# Service with security-focused header configuration
[[services]]
name = "internal-api"
backend_addr = "localhost:8081"

# Remove all authentication headers going to backend
remove_upstream = [
    "Authorization",
    "Cookie",
    "X-API-Key",
    "X-Session-Token"
]

# Add security headers to responses
[services.downstream_headers]
"X-Content-Type-Options" = "nosniff"
"X-Frame-Options" = "DENY"
"X-XSS-Protection" = "1; mode=block"
"Referrer-Policy" = "strict-origin-when-cross-origin"

# Remove any internal debugging headers from responses
remove_downstream = [
    "X-Debug-Info",
    "X-Request-ID",
    "X-Backend-Server",
    "X-Processing-Time"
]

# Service with custom request routing headers
[[services]]
name = "multi-tenant-app"
backend_addr = "localhost:8082"

# Add tenant identification headers
[services.upstream_headers]
"X-Tenant-ID" = "default"
"X-Request-Priority" = "normal"

# Service exposed via Tailscale Funnel with public-facing headers
[[services]]
name = "public-api"
backend_addr = "localhost:8083"
funnel_enabled = true  # Expose via Tailscale Funnel

# Add rate limiting headers for public access
[services.downstream_headers]
"X-RateLimit-Limit" = "100"
"X-RateLimit-Remaining" = "100"
"X-RateLimit-Reset" = "3600"
"Cache-Control" = "public, max-age=300"

# Remove any internal information
remove_downstream = ["X-Internal-Request-ID", "X-Backend-Pool"]